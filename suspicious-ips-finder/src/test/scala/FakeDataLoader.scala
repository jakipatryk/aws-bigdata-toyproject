import org.apache.spark.sql.types.TimestampType
import org.apache.spark.sql.{DataFrame, SparkSession}

trait FakeDataLoader {

  def loadViews()(implicit spark: SparkSession): DataFrame = {
    import spark.implicits._

    (
      ("1", "2021-05-07T11:08:55Z", "mobile:ios", "804", "96.120.47.159")
        :: ("1", "2021-05-07T11:08:55Z", "mobile:ios", "804", "96.120.47.159")
        :: ("1", "2021-05-07T11:08:55Z", "mobile:ios", "804", "96.120.47.159")
        :: ("1", "2021-05-07T11:08:55Z", "mobile:ios", "804", "96.120.47.159")
        :: ("1", "2021-05-07T11:08:55Z", "mobile:ios", "804", "96.120.47.159")
        :: ("5", "2021-05-07T11:08:56Z", "mobile:android", "105", "93.111.111.111")
        :: ("5", "2021-05-07T11:08:56Z", "mobile:android", "105", "93.111.111.111")
        :: ("5", "2021-05-07T11:08:56Z", "mobile:android", "105", "93.111.111.111")
        :: ("5", "2021-05-07T11:08:56Z", "mobile:android", "105", "93.111.111.111")
        :: ("5", "2021-05-07T11:08:57Z", "mobile:android", "105", "93.111.111.111")
        :: ("3", "2021-05-07T11:08:58Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:58Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:58Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:58Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:59Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:59Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:59Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:59Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:59Z", "other", "32", "93.120.120.120")
        :: ("3", "2021-05-07T11:08:59Z", "other", "32", "93.120.120.120")
        :: Nil
    ).toDF("item_id", "timestamp", "device_type", "device_id", "user_ip")
      .withColumn("timestamp", $"timestamp".cast(TimestampType))
  }

}
